(defwidget musicplayer []
  (box :orientation "v" :space-evenly false :class "music-main-box"
  (box :space-evenly false :class "box-music-player" :valign "center" :halign "center" :orientation "v"
      (box :width 120 :height 120 :class "music-art" :valign "center" :halign "center" :orientation "v" :style "background-image: url('${artMusic}');" )
      (box :space-evenly false :class "box-music-info" :valign "center" :halign "center" :orientation "v"
        (label :text music_artist :class "music-artist")
        (label :limit-width 150 :text "${music_title} ~ ${music_album}" :class "music-title" :wrap true)
    )
      (box :space-evenly false :class "box-music-duration" :valign "center" :halign "center" :orientation "v"
        (label :halign "start" :text current_time_duration_friendly :class "current-time-friendly")
            (scale 
              :orientation "h"
              :draw-value false
              :width 350
              :class "music-duration-scale"
              :min 0
              :max max_time_duration
              :value current_time_duration
              :onchange "~/.config/eww/scripts/music_set_position {}" 
              )
      )
    (box :class "box-music-buttons" :valign "center" :halign "center" :orientation "h"
      (eventbox :cursor "pointer" 
        (button :tooltip "previous" :onclick "playerctl previous" :class "music-button-previous-next" "󰒮")
      )
      (eventbox :cursor "pointer" 
        (button :tooltip "play/pause" :onclick "playerctl play-pause" :class "music-button-play-pause"  {player_status == "Playing" ? "" : ""   } )
      )
      (eventbox :cursor "pointer" 
        (button :tooltip "next" :onclick "playerctl next" :class "music-button-previous-next" "󰒭")
      )
    )
  )
)
)

(defpoll current_time_duration_friendly :interval "20ms" "~/.config/eww/scripts/music_position_friendly")
(defpoll current_time_duration :interval "20ms" "~/.config/eww/scripts/music_current_position")
(defpoll player_status :interval "20ms" "playerctl status")
(defpoll artMusic :interval "20ms" "playerctl metadata mpris:artUrl | sed 's|file://||'")
(deflisten max_time_duration :initial "0" "playerctl --follow metadata mpris:length")
(deflisten music_title :initial "Music title" "playerctl --follow metadata xesam:title")
(deflisten music_artist :initial "Music Artist" "playerctl --follow metadata xesam:artist")
(deflisten music_album :initial "Music Album" "playerctl --follow metadata xesam:album")

(defwindow  musicplayer
	    :geometry (geometry 
                           :width "400px"
                           :height "300px"
                           :anchor "top center"
                           )
	     				(musicplayer))
